{"version":3,"file":"src_app_settings_settings_module_ts.js","mappings":"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AG1B,0DACF;QADE,yOACF;QAaU,2DAAwD;QAAxD,mOAAwD;QACnC,0DAAoD;QAApD,6KAAoD;QAErE,0DAAqD;QAArD,kHAAqD;QAUzD,0DAAyD;QAAzD,oOAAyD;QAE3D,0DACF;QADE,yPACF;QAOI,0DAAqD;QAArD,gOAAqD;QAChC,0DAAK;QAAL,kEAAK;QAS1B,0DAA0D;QAA1D,qOAA0D;QAE5D,0DACF;QADE,0PACF;QASsB,0DAC1B;QAD0B,4KAC1B;QAO0B,0DAC1B;QAD0B,8KAC1B;;;;;;;;;;;;;;;;;;;ACxED;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AAC5B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;;;;;;;ACnD0C;AACjD,gBAAgB,+DAAc;AAC9B,eAAe,+JAAe;AAC9B,CAAC;AAC6B;AACX","sources":["./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings.page.ts","./src/app/settings/settings.page.html","./src/app/settings/wallet/my-wallet/my-wallet.modal.ts","./src/app/settings/wallet/my-wallet/my-wallet.modal.html","./node_modules/@capacitor/haptics/dist/esm/definitions.js","./node_modules/@capacitor/haptics/dist/esm/index.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  },\n  {\n    path: 'account',\n    loadChildren: () => import('./account/account.module').then( m => m.AccountPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n\n","import { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { SettingsPageRoutingModule } from './settings-routing.module';\nimport { SettingsPage } from './settings.page';\nimport { MyWalletModal } from './wallet/my-wallet/my-wallet.modal';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [\n    SettingsPage,\n    MyWalletModal\n  ],\n  providers: [HttpClient]\n})\nexport class SettingsPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { AuthenticationService } from 'src/app/core/authentication.service';\nimport { LoadingIndicatorService } from 'src/app/core/loading-indicator.service';\nimport { MyWalletModal } from 'src/app/settings/wallet/my-wallet/my-wallet.modal';\nimport { WalletService } from 'src/app/core/wallet.service';\nimport { BasePageComponent } from 'src/app/shared/base-page/base-page.component';\nimport { Browser } from '@capacitor/browser';\nimport { environment } from 'src/environments/environment';\nimport { QrScannerService } from 'src/app/core/qr-scanner.service';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\nimport { ModalService } from 'src/app/shared/modal/modal.service';\nimport { ModalSize } from 'src/app/shared/modal/modal.types';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss']\n})\nexport class SettingsPage extends BasePageComponent implements OnInit {\n  hasWallet: boolean;\n\n  constructor(\n    private modalService: ModalService,\n    private authenticationService: AuthenticationService,\n    private walletService: WalletService,\n    public loadingIndicatorService: LoadingIndicatorService,\n    private qrScannerService: QrScannerService\n  ) {\n\n    super();\n  }\n\n  ngOnInit(): void {\n    this.loadingIndicatorService.startLoading('settingsPage');\n    this.walletService.hasWallet()\n      .pipe(finalize(() => this.loadingIndicatorService.stopLoading('settingsPage')))\n      .subscribe(hasWallet => this.hasWallet = hasWallet);\n  }\n\n  logout(): void {\n    this.authenticationService.logout();\n  }\n\n  openMyWallet(): void {\n    this.modalService.open(MyWalletModal, ModalSize.fullscreen);\n  }\n\n  setupWallet(): void {\n    if (this.hasWallet) {\n      this.scanQRCode();\n\n    } else {\n      this.walletService.showCreateWalletNotification();\n    }\n  };\n\n  async scanQRCode(): Promise<void> {\n    const scanResult = await this.qrScannerService.startScan();\n\n    if (scanResult.hasContent) {\n      Haptics.impact({ style: ImpactStyle.Light });\n\n      this.walletService.setWalletPrivateKey(scanResult.content);\n    }\n  }\n\n  openUserAccountUrl(): void {\n    // Temporally redirect to the website, until we implement the AccountPage with later stories\n    Browser.open({ url: environment.accountUrl });\n  }\n}\n","<ion-content [fullscreen]=\"true\">\n  <div *ngIf=\"loadingIndicatorService.isLoading('settingsPage')\"\n       class=\"loading-indicator\">\n    <img class=\"logo blur-out position-absolute top-50 start-50 translate-middle\"\n         src=\"assets/images/logo.svg\"\n         alt=\"Logo\"/>\n  </div>\n  <ion-header [translucent]=\"true\">\n    <ion-toolbar color=\"translucent\">\n      <ion-title class=\"settings-title\" >{{\"settings.title\" | translate}}</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col>\n        <ion-item *ngIf=\"hasWallet; else setupWalletCard\"\n                  button\n                  detail\n                  (click)=\"openMyWallet()\">\n          <ion-label class=\"ion-text-wrap\">\n            <h2 translate=\"settings.myWalletButton\"></h2>\n            <p translate=\"settings.myWalletButtonNote\"></p>\n          </ion-label>\n        </ion-item>\n        <ng-template #setupWalletCard>\n          <ion-item button\n                    detail\n                    class=\"attention\"\n                    (click)=\"setupWallet()\">\n            <ion-label class=\"ion-text-wrap\">\n              <ion-icon name=\"alert-circle-outline\"\n                        class=\"alert-icon ion-float-left\"></ion-icon>\n              <h2 translate=\"settings.setupWalletButton\"></h2>\n              <p translate=\"settings.setupWalletButtonNote\"></p>\n            </ion-label>\n          </ion-item>\n        </ng-template>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-item (click)=\"openUserAccountUrl()\"\n                  routerDirection=\"forward\"\n                  detail>\n          <ion-label class=\"ion-text-wrap\">\n            <h2 translate=\"settings.myAccountButton\"></h2>\n            <p translate=\"settings.myAccountButtonNote\"></p>\n          </ion-label>\n        </ion-item>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n  <ion-button (click)=\"logout()\"\n              class=\"logout-button\"\n              expand=\"block\"\n              fill=\"outline\"\n              color=\"white\">{{'settings.logoutButton' | translate}}</ion-button>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Observable, of } from 'rxjs';\nimport { WalletService } from 'src/app/core/wallet.service';\n\n@Component({\n  selector: 'app-my-wallet',\n  templateUrl: './my-wallet.modal.html',\n  styleUrls: ['./my-wallet.modal.scss'],\n})\nexport class MyWalletModal implements OnInit {\n  $walletPrivateKey: Observable<string>;\n  $walletINFBalance: Observable<number>;\n  $walletLBTCBalance: Observable<number>;\n  $walletAssets: Observable<number>;\n  obscured = true;\n\n  constructor(private modalCtrl: ModalController,\n              walletService: WalletService) {\n    this.$walletPrivateKey = walletService.getWalletPrivateKey();\n    this.$walletINFBalance = walletService.getINFBalance();\n    this.$walletLBTCBalance = walletService.getLBTCBalance();\n    this.$walletAssets = of(12); // TODO check where to get the real count.\n  }\n\n  ngOnInit() {}\n\n  onClose() {\n    this.modalCtrl.dismiss();\n  }\n\n  toggleShowKey(): void {\n    this.obscured = !this.obscured;\n  }\n}\n","<ion-content>\n  <ion-header [translucent]=\"true\">\n    <ion-toolbar color=\"translucent\">\n      <ion-title class=\"my-wallet-title\">\n        {{'settings.myWallet.title' | translate | uppercase}}\n      </ion-title>\n      <ion-buttons slot=\"primary\">\n        <ion-button (click)=\"onClose()\">\n          <ion-icon name=\"close\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col>\n        <ion-item>\n          <ion-label class=\"mt-3 ion-text-wrap\">\n            <h3>{{\"settings.myWalletPublicKey\" | translate | uppercase}}</h3>\n            <h2 class=\"mb-0 fw-bold\">{{'fhd384ygt7839hf82374fh387' | obscure : obscured}}</h2>\n          </ion-label>\n          <ion-icon [name]=\"obscured ? 'eye-outline' : 'eye-off-outline'\"\n                    (click)=\"toggleShowKey()\"\n                    slot=\"end\"></ion-icon>\n        </ion-item>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-item>\n          <ion-label class=\"mt-3 ion-text-wrap\">\n            <h3>{{\"settings.myWalletINFBalance\" | translate | uppercase}}</h3>\n            <h2 class=\"mb-0 fw-bold\">\n              {{\"settings.myWalletINFBalanceValue\" | translate : {balance: 36.2715} }}\n            </h2>\n          </ion-label>\n        </ion-item>\n      </ion-col>\n      <ion-col>\n        <ion-item>\n          <ion-label class=\"mt-3 ion-text-wrap\">\n            <h3>{{\"settings.myWalletAssets\" | translate | uppercase}}</h3>\n            <h2 class=\"mb-0 fw-bold\">{{2}}</h2>\n          </ion-label>\n        </ion-item>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-item>\n          <ion-label class=\"mt-3 ion-text-wrap\">\n            <h3>{{\"settings.myWalletLBTCBalance\" | translate | uppercase}}</h3>\n            <h2 class=\"mb-0 fw-bold\">\n              {{\"settings.myWalletLBTCBalanceValue\" | translate : {balance: 0.1412} }}\n            </h2>\n          </ion-label>\n        </ion-item>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-button expand=\"block\"\n                    fill=\"solid\"\n                    color=\"white\">{{\"settings.myWalletCloneWallet\" | translate}}\n        </ion-button>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-button expand=\"block\"\n                    fill=\"outline\"\n                    color=\"white\">{{\"settings.myWalletRestoreWallet\" | translate}}\n        </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","export var ImpactStyle;\n(function (ImpactStyle) {\n    /**\n     * A collision between large, heavy user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Heavy\"] = \"HEAVY\";\n    /**\n     * A collision between moderately sized user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Medium\"] = \"MEDIUM\";\n    /**\n     * A collision between small, light user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Light\"] = \"LIGHT\";\n})(ImpactStyle || (ImpactStyle = {}));\nexport var NotificationType;\n(function (NotificationType) {\n    /**\n     * A notification feedback type indicating that a task has completed successfully\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Success\"] = \"SUCCESS\";\n    /**\n     * A notification feedback type indicating that a task has produced a warning\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Warning\"] = \"WARNING\";\n    /**\n     * A notification feedback type indicating that a task has failed\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Error\"] = \"ERROR\";\n})(NotificationType || (NotificationType = {}));\n/**\n * @deprecated Use `NotificationType`.\n * @since 1.0.0\n */\nexport const HapticsNotificationType = NotificationType;\n/**\n * @deprecated Use `ImpactStyle`.\n * @since 1.0.0\n */\nexport const HapticsImpactStyle = ImpactStyle;\n","import { registerPlugin } from '@capacitor/core';\nconst Haptics = registerPlugin('Haptics', {\n    web: () => import('./web').then(m => new m.HapticsWeb()),\n});\nexport * from './definitions';\nexport { Haptics };\n"],"names":[],"sourceRoot":"webpack:///"}