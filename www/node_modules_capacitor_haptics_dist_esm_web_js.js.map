{"version":3,"file":"node_modules_capacitor_haptics_dist_esm_web_js.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACO,MAAMG,UAAN,SAAyBH,sDAAzB,CAAmC;AACtCI,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACH;;AACKC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAAA;;AAAA;AAClB,YAAMC,OAAO,GAAG,KAAI,CAACC,gBAAL,CAAsBF,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACG,KAAhF,CAAhB;;AACA,WAAI,CAACC,kBAAL,CAAwBH,OAAxB;AAFkB;AAGrB;;AACKI,EAAAA,YAAY,CAACL,OAAD,EAAU;AAAA;;AAAA;AACxB,YAAMC,OAAO,GAAG,MAAI,CAACK,sBAAL,CAA4BN,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACO,IAAtF,CAAhB;;AACA,YAAI,CAACH,kBAAL,CAAwBH,OAAxB;AAFwB;AAG3B;;AACKO,EAAAA,OAAO,CAACR,OAAD,EAAU;AAAA;;AAAA;AACnB,YAAMS,QAAQ,GAAG,CAACT,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACS,QAA3D,KAAwE,GAAzF;;AACA,YAAI,CAACL,kBAAL,CAAwB,CAACK,QAAD,CAAxB;AAFmB;AAGtB;;AACKC,EAAAA,cAAc,GAAG;AAAA;;AAAA;AACnB,YAAI,CAACZ,gBAAL,GAAwB,IAAxB;AADmB;AAEtB;;AACKa,EAAAA,gBAAgB,GAAG;AAAA;;AAAA;AACrB,UAAI,MAAI,CAACb,gBAAT,EAA2B;AACvB,cAAI,CAACM,kBAAL,CAAwB,CAAC,EAAD,CAAxB;AACH;AAHoB;AAIxB;;AACKQ,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,YAAI,CAACd,gBAAL,GAAwB,KAAxB;AADiB;AAEpB;;AACDI,EAAAA,gBAAgB,CAACC,KAAK,GAAGV,2DAAT,EAA4B;AACxC,QAAIU,KAAK,KAAKV,4DAAd,EAAkC;AAC9B,aAAO,CAAC,EAAD,CAAP;AACH,KAFD,MAGK,IAAIU,KAAK,KAAKV,2DAAd,EAAiC;AAClC,aAAO,CAAC,EAAD,CAAP;AACH;;AACD,WAAO,CAAC,EAAD,CAAP;AACH;;AACDa,EAAAA,sBAAsB,CAACC,IAAI,GAAGb,kEAAR,EAAkC;AACpD,QAAIa,IAAI,KAAKb,kEAAb,EAAuC;AACnC,aAAO,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAP;AACH,KAFD,MAGK,IAAIa,IAAI,KAAKb,gEAAb,EAAqC;AACtC,aAAO,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAP;AACH;;AACD,WAAO,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAP;AACH;;AACDU,EAAAA,kBAAkB,CAACH,OAAD,EAAU;AACxB,QAAIkB,SAAS,CAACX,OAAd,EAAuB;AACnBW,MAAAA,SAAS,CAACX,OAAV,CAAkBP,OAAlB;AACH,KAFD,MAGK;AACD,YAAM,KAAKmB,WAAL,CAAiB,0CAAjB,CAAN;AACH;AACJ;;AArDqC","sources":["./node_modules/@capacitor/haptics/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { ImpactStyle, NotificationType } from './definitions';\nexport class HapticsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.selectionStarted = false;\n    }\n    async impact(options) {\n        const pattern = this.patternForImpact(options === null || options === void 0 ? void 0 : options.style);\n        this.vibrateWithPattern(pattern);\n    }\n    async notification(options) {\n        const pattern = this.patternForNotification(options === null || options === void 0 ? void 0 : options.type);\n        this.vibrateWithPattern(pattern);\n    }\n    async vibrate(options) {\n        const duration = (options === null || options === void 0 ? void 0 : options.duration) || 300;\n        this.vibrateWithPattern([duration]);\n    }\n    async selectionStart() {\n        this.selectionStarted = true;\n    }\n    async selectionChanged() {\n        if (this.selectionStarted) {\n            this.vibrateWithPattern([70]);\n        }\n    }\n    async selectionEnd() {\n        this.selectionStarted = false;\n    }\n    patternForImpact(style = ImpactStyle.Heavy) {\n        if (style === ImpactStyle.Medium) {\n            return [43];\n        }\n        else if (style === ImpactStyle.Light) {\n            return [20];\n        }\n        return [61];\n    }\n    patternForNotification(type = NotificationType.Success) {\n        if (type === NotificationType.Warning) {\n            return [30, 40, 30, 50, 60];\n        }\n        else if (type === NotificationType.Error) {\n            return [27, 45, 50];\n        }\n        return [35, 65, 21];\n    }\n    vibrateWithPattern(pattern) {\n        if (navigator.vibrate) {\n            navigator.vibrate(pattern);\n        }\n        else {\n            throw this.unavailable('Browser does not support the vibrate API');\n        }\n    }\n}\n"],"names":["WebPlugin","ImpactStyle","NotificationType","HapticsWeb","constructor","arguments","selectionStarted","impact","options","pattern","patternForImpact","style","vibrateWithPattern","notification","patternForNotification","type","vibrate","duration","selectionStart","selectionChanged","selectionEnd","Heavy","Medium","Light","Success","Warning","Error","navigator","unavailable"],"sourceRoot":"webpack:///"}